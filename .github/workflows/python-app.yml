name: FleetControl Grohe Report

on:
  workflow_dispatch:      # Manual trigger
  #schedule:               # Daily at 05:00 UTC
   # - cron: '0 5 * * *'

jobs:
  report:
    runs-on: ubuntu-latest

    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests tzdata

      - name: Run FC_Report.py (Query 3 for Grohe, current month)
        run: |
          CUR_YEAR=$(date +'%Y')
          CUR_MONTH=$(date +'%-m')
          printf '2\n3\n%s\n%s\n' "$CUR_YEAR" "$CUR_MONTH" \
            | python FleetControl/FC_Report.py

      - name: Upload CSV artifact
        uses: actions/upload-artifact@v4
        with:
          name: Grohe_Report
          path: Grohe_events_*.csv

      - name: Build artifact download link
        id: artifact
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          API="https://api.github.com/repos/${{ github.repository }}/actions/artifacts"
          RESP=$(curl -s -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" "$API")

          ART_ID=$(echo "$RESP" | jq '.artifacts[] | select(.name=="Grohe_Report") | .id' | head -n1)

          if [ -z "$ART_ID" ]; then
            echo "artifact_found=no" >> "$GITHUB_OUTPUT"
          else
            echo "artifact_found=yes" >> "$GITHUB_OUTPUT"
            echo "artifact_url=https://github.com/${{ github.repository }}/actions/artifacts/${ART_ID}/zip" >> "$GITHUB_OUTPUT"
          fi

      - name: Send Slack message
        if: steps.artifact.outputs.artifact_found == 'yes'
        run: |
          CUR_YEAR=$(date +'%Y')
          CUR_MONTH=$(date +'%b' | tr '[:upper:]' '[:lower:]')
          FILE="Grohe_events_${CUR_YEAR}_${CUR_MONTH}_patch.csv"
          LINK="${{ steps.artifact.outputs.artifact_url }}"
          MSG="*ðŸ“Š FleetControl Grohe Report generated*\nâ€¢ Report: \`$FILE\`\nâ€¢ ðŸ”— <$LINK|Click to download CSV>"
          jq -n --arg text "$MSG" '{text:$text}' > slack.json
          curl -sSL -X POST -H "Content-Type: application/json" --data @slack.json "$SLACK_WEBHOOK_URL"
