name: FleetControl Grohe Report

on:
  workflow_dispatch:
  #schedule:
   # - cron: '0 5 * * *'

jobs:
  grohe-report:
    runs-on: ubuntu-latest

    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests tzdata

      - name: Generate Grohe CSV report
        run: |
          CUR_YEAR=$(date +'%Y')
          CUR_MONTH=$(date +'%-m')
          printf '2\n3\n%s\n%s\n' "$CUR_YEAR" "$CUR_MONTH" | python FleetControl/FC_Report.py

      - name: Zip the report
        run: |
          FILE=$(ls Grohe_events_*.csv | head -n1)
          zip -j Grohe_Report.zip "$FILE"

      - name: Upload artifact and log URL
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: Grohe_Report
          path: Grohe_Report.zip

      - name: Extract artifact URL and notify Slack
        run: |
          echo "⏳ Fetching job log via gh CLI…"
          LOG=$(gh run view ${{ github.run_id }} --log)

          URL=$(echo "$LOG" | grep -oE 'https://github.com/.*/artifacts/[0-9]+' | head -n1)

          if [ -z "$URL" ]; then
            echo "::notice::Artifact URL not found – Slack message skipped."
            exit 0
          fi

          FILE="Grohe_events_$(date +'%Y_%b' | tr '[:upper:]' '[:lower:]')_patch.csv"
          TEXT="*:bar_chart: FleetControl Grohe Report generated*\n• Report: \`${FILE}\`\n• :link: <${URL}|Download CSV>"

          jq -n --arg text "$TEXT" '{text:$text}' > slack.json
          curl -sSL -X POST -H 'Content-Type: application/json' --data @slack.json "$SLACK_WEBHOOK_URL"
