name: FleetControl Grohe Report

on:
  workflow_dispatch:
  #schedule:
   # - cron: '0 5 * * *' # runs daily at 05:00 UTC

jobs:
  fleetcontrol-report:
    runs-on: ubuntu-latest

    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests tzdata

      - name: Run FC_Report.py for Grohe (customer 2, query 3, current month)
        run: |
          CUR_YEAR=$(date +'%Y')
          CUR_MONTH=$(date +'%-m')
          printf '2\n3\n%s\n%s\n' "$CUR_YEAR" "$CUR_MONTH" | python FleetControl/FC_Report.py

      - name: Zip the CSV file
        run: |
          FILE=$(ls Grohe_events_*.csv | head -n1)
          echo "Zipping $FILE..."
          zip -r Grohe_Report.zip "$FILE"

      - name: Upload artifact (Grohe_Report.zip)
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: Grohe_Report
          path: Grohe_Report.zip

      - name: Parse artifact ID from logs
        id: parse_artifact_id
        run: |
          echo "Waiting 10s for GitHub to register the artifact..."
          sleep 10
          API_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
          echo "API_URL=$API_URL"

          RESP=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github+json" "$API_URL")
          ART_ID=$(echo "$RESP" | jq -r '.artifacts[] | select(.name=="Grohe_Report") | .id')

          if [ -z "$ART_ID" ] || [ "$ART_ID" == "null" ]; then
            echo "Artifact ID not found. Failing."
            exit 1
          fi

          echo "artifact_id=$ART_ID" >> "$GITHUB_OUTPUT"

      - name: Send Slack message with download link
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "*\uD83D\uDCCA FleetControl Grohe Report generated*\n\n• Report: `Grohe_events_2025_jun_patch.csv`\n• :link: <https://github.com/${{ github.repository }}/actions/artifacts/${{ steps.parse_artifact_id.outputs.artifact_id }}/zip|Click to download CSV>"
            }
