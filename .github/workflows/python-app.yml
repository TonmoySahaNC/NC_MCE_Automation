name: FleetControl Grohe Report

on:
  workflow_dispatch:
  #schedule:
   # - cron: '0 5 * * *'

jobs:
  grohe-report:
    runs-on: ubuntu-latest

    permissions:           # allow gh CLI to list artifacts
      actions: read
      contents: read

    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      GH_TOKEN:          ${{ github.token }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Python deps
        run: |
          pip install --upgrade pip
          pip install requests tzdata

      - name: Generate Grohe CSV (Query 3, current month)
        run: |
          YEAR=$(date +'%Y')
          MONTH=$(date +'%-m')
          printf '2\n3\n%s\n%s\n' "$YEAR" "$MONTH" | python FleetControl/FC_Report.py

      - name: Zip report
        run: |
          FILE=$(ls Grohe_events_*.csv | head -n1)
          echo "REPORT_FILE=$FILE" >> $GITHUB_ENV
          zip -j Grohe_Report.zip "$FILE"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Grohe_Report
          path: Grohe_Report.zip

      - name: Retrieve artifact ID via gh
        id: artifact
        run: |
          sleep 5
          ART_ID=$(gh api -H "Accept: application/vnd.github+json" \
                   /repos/${{ github.repository }}/actions/artifacts \
                   -q '.artifacts[] | select(.name=="Grohe_Report") | .id' | head -n1)
          if [ -z "$ART_ID" ]; then
            echo "artifact_found=no"  >> $GITHUB_OUTPUT
          else
            echo "artifact_found=yes" >> $GITHUB_OUTPUT
            echo "artifact_id=$ART_ID"  >> $GITHUB_OUTPUT
          fi

      - name: Slack notification
        if: steps.artifact.outputs.artifact_found == 'yes'
        run: |
          ART_ID=${{ steps.artifact.outputs.artifact_id }}
          LINK="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${ART_ID}"
          TEXT="*:bar_chart: FleetControl Grohe Report generated*\n• Report: \`${{ env.REPORT_FILE }}\`\n• :link: <${LINK}|View & Download CSV>"
          curl -sSL -X POST -H 'Content-Type: application/json' --data $(jq -n --arg text "$TEXT" '{text:$text}') "$SLACK_WEBHOOK_URL"
