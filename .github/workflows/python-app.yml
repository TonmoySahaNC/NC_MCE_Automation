name: FleetControl Grohe Report

on:
  workflow_dispatch:
  #schedule:
   # - cron: '0 5 * * *'  # Daily at 05:00 UTC

jobs:
  grohe-report:
    runs-on: ubuntu-latest

    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests tzdata

      - name: Generate Grohe CSV Report
        run: |
          CUR_YEAR=$(date +'%Y')
          CUR_MONTH=$(date +'%-m')
          printf '2\n3\n%s\n%s\n' "$CUR_YEAR" "$CUR_MONTH" | python FleetControl/FC_Report.py

      - name: Zip report file
        run: |
          FILE=$(ls Grohe_events_*.csv | head -n1)
          echo "Zipping $FILE → Grohe_Report.zip"
          zip -j Grohe_Report.zip "$FILE"

      - name: Upload artifact and capture URL
        id: upload
        run: |
          echo "::group::Upload Artifact"
          echo "Uploading Grohe_Report.zip"
          actions/upload-artifact/upload-artifact -n Grohe_Report -p Grohe_Report.zip 2>&1 | tee upload.log || true
          echo "::endgroup::"
          URL=$(grep -o 'https://github.com.*/artifacts/[0-9]*' upload.log | head -n1)
          if [ -n "$URL" ]; then
            echo "artifact_url=$URL" >> "$GITHUB_OUTPUT"
          else
            echo "artifact_url=" >> "$GITHUB_OUTPUT"
            echo "::warning::Could not extract artifact URL"
          fi

      - name: Send Slack notification with raw artifact URL
        if: steps.upload.outputs.artifact_url != ''
        run: |
          TEXT="*:bar_chart: Grohe Report*\n• :link: <${{ steps.upload.outputs.artifact_url }}|Download CSV>"
          curl -s -X POST -H 'Content-type: application/json' \
            --data "$(jq -n --arg text \"$TEXT\" '{text: $text}')" \
            "$SLACK_WEBHOOK_URL"
