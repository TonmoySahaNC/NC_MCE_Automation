name: FleetControl Grohe Report

on:
  workflow_dispatch:
  #schedule:
   # - cron: '0 5 * * *'

jobs:
  report:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests tzdata

      - name: Run FC_Report.py (Query 3 for Grohe, current month)
        run: |
          CUR_YEAR=$(date +'%Y')
          CUR_MONTH=$(date +'%-m')
          printf '2\n3\n%s\n%s\n' "$CUR_YEAR" "$CUR_MONTH" | python FleetControl/FC_Report.py

      - name: Zip report file
        run: |
          FILE=$(ls Grohe_events_*.csv | head -n1)
          echo "ZIPPING FILE: $FILE"
          zip -r Grohe_Report.zip "$FILE"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Grohe_Report
          path: Grohe_Report.zip

      - name: Fetch artifact ID
        id: artifact
        run: |
          API_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
          echo "Waiting 5s before polling GitHub API..."
          sleep 5

          for i in {1..10}; do
            echo "Attempt $i: Querying artifact API..."
            RESP=$(curl -s -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" "$API_URL")

            if echo "$RESP" | jq -e '.artifacts' > /dev/null; then
              ART_ID=$(echo "$RESP" | jq '.artifacts[] | select(.name=="Grohe_Report") | .id' | head -n1)
              if [ -n "$ART_ID" ]; then
                echo "Artifact found: ID = $ART_ID"
                echo "artifact_found=yes" >> "$GITHUB_OUTPUT"
                echo "artifact_id=$ART_ID" >> "$GITHUB_OUTPUT"
                exit 0
              fi
            else
              echo "Warning: GitHub API returned empty or malformed response."
            fi

            echo "Artifact not found yet. Waiting 6s before retry..."
            sleep 6
          done

          echo "artifact_found=no" >> "$GITHUB_OUTPUT"
          echo "Error: Artifact not found after multiple retries."

      - name: Post Slack message
        if: steps.artifact.outputs.artifact_found == 'yes'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": ":bar_chart: *FleetControl Grohe Report generated*\n\n• Report: `Grohe_events_$(date +'%Y_%b' | tr '[:upper:]' '[:lower:]')_patch.csv`\n• :link: <https://github.com/${{ github.repository }}/actions/artifacts/${{ steps.artifact.outputs.artifact_id }}/zip|Download CSV>"
            }
